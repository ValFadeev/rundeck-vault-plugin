{% set providerBase = "/rundeck/storage/provider" %}

{% macro storage_provider(provider) %}
{%- set index = provider | base %}
rundeck.storage.provider.{{index}}.type={% set type = printf("%s/type", provider) %}{{ getv(type, "db")}}
rundeck.storage.provider.{{index}}.path={% set path = printf("%s/path", provider) %}{{ getv(path, "keys")}}
rundeck.storage.provider.{{index}}.removePathPrefix={% set removepathprefix = printf("%s/removepathprefix", provider) %}{{ getv(removepathprefix, "false")}}

rundeck.storage.provider.{{index}}.config.prefix={% set prefix = printf("%s/config/prefix", provider) %}{{ getv(prefix, "")}}
rundeck.storage.provider.{{index}}.config.address={% set address = printf("%s/config/address", provider) %}{{ getv(address, "")}}
rundeck.storage.provider.{{index}}.config.storageBehaviour={% set behaviour = printf("%s/config/behaviour", provider) %}{{ getv(behaviour, "rundeck")}}
rundeck.storage.provider.{{index}}.config.secretBackend={% set secretbackend = printf("%s/config/secretbackend", provider) %}{{ getv(secretbackend, "secret")}}

rundeck.storage.provider.{{index}}.config.maxRetries={% set maxretries = printf("%s/config/maxretries", provider) %}{{ getv(maxretries, "3")}}
rundeck.storage.provider.{{index}}.config.retryIntervalMilliseconds={% set retryinterval = printf("%s/config/retryinterval", provider) %}{{ getv(retryinterval, "100")}}
rundeck.storage.provider.{{index}}.config.openTimeout={% set opentimeout = printf("%s/config/opentimeout", provider) %}{{ getv(opentimeout, "3")}}
rundeck.storage.provider.{{index}}.config.readTimeout={% set readtimeout = printf("%s/config/readtimeout", provider) %}{{ getv(readtimeout, "5")}}

rundeck.storage.provider.{{index}}.config.engineVersion={% set engineversion = printf("%s/config/engineversion", provider) %}{{ getv(engineversion, "1")}}

{%- set auth = getv(printf("%s/config/authbackend", provider), "token") %}
{%- set namespace = getv(printf("%s/config/namespace", provider)) %}
{%- set authnamespace = getv(printf("%s/config/authnamespace", provider)) %}


{% if namespace %}
rundeck.storage.provider.{{index}}.config.namespace={% set namespace = printf("%s/config/namespace", provider) %}{{ getv(namespace)}}
{% endif %}

{% if auth == 'token' %}
rundeck.storage.provider.{{index}}.config.token={% set token = printf("%s/config/token", provider) %}{{ getv(token, "")}}

{% endif %}


{% if auth == 'approle' %}
rundeck.storage.provider.{{index}}.config.approleId={% set approleid = printf("%s/config/approleid", provider) %}{{ getv(approleid)}}
rundeck.storage.provider.{{index}}.config.approleSecretId={% set approlesecretid = printf("%s/config/approlesecretid", provider) %}{{ getv(approlesecretid)}}
rundeck.storage.provider.{{index}}.config.approleAuthMount={% set approleauthmount = printf("%s/config/approleauthmount", provider) %}{{ getv(approleauthmount,"approle")}}
rundeck.storage.provider.{{index}}.config.authBackend=approle

{% endif %}

{% if authnamespace %}
rundeck.storage.provider.{{index}}.config.authNamespace={% set authnamespace = printf("%s/config/authnamespace", provider) %}{{ getv(authnamespace)}}
{% endif %}

{% endmacro %}


{% for p in lsdir(providerBase) -%}
{% set provider = printf("%s/%s", providerBase, p) -%}
{{ storage_provider(provider) }}
{%- endfor %}


